var searchDocuments = {"references/eClassifiers/Sheet/inheritance.html":{"path":"Sheet/Inheritance","link-uuid":"d7474076-fe49-4e32-9c1e-9f0451ddcb07","title":"Inheritance","content":"Subtypes "},"references/eClassifiers/Cell/inheritance.html":{"path":"Cell/Inheritance","link-uuid":"25503096-b706-485a-8753-b016ad77ecc0","title":"Inheritance","content":"Subtypes "},"references/eClassifiers/StringCell/inheritance.html":{"path":"StringCell/Inheritance","link-uuid":"0e7f20a3-01fd-4ef3-8b74-3a2d7617dd6b","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/RowSheet/inheritance.html":{"path":"RowSheet/Inheritance","link-uuid":"8dbcd771-642a-466e-bebe-c3f1397c1bcd","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/Workbook/index.html":{"link-uuid":"9068094f-4b9a-454c-9d77-63465c78f832","title":"Workbook","content":"Excel workbook containing sheets of possibly different type"},"references/eClassifiers/NumericCell/inheritance.html":{"path":"NumericCell/Inheritance","link-uuid":"2e9e4f7d-d201-49c6-8b27-bb828ef57c23","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/ReferenceCell/inheritance.html":{"path":"ReferenceCell/Inheritance","link-uuid":"dc3055b6-3874-4457-8a97-562d639f305f","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/EObjectCell/inheritance.html":{"path":"EObjectCell/Inheritance","link-uuid":"00c6c8bb-4785-447f-96b2-fec3fe3cc26c","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/BlankCell/inheritance.html":{"path":"BlankCell/Inheritance","link-uuid":"1999bac4-32e5-4431-a977-b88544a133da","title":"Inheritance","content":"Supertypes "},"index.html":{"link-uuid":"5f593ce6-4886-448e-98ae-d9c61fff6536","title":"Excel","content":"Creating a model and writing a file Series and column builders Column builder group Reading a file Creating a model and writing a file CapabilityLoader capabilityLoader = new CapabilityLoader();\nProgressMonitor progressMonitor = new PrintStreamProgressMonitor();\nRequirement&lt;ResourceSetRequirement, ResourceSet&gt; requirement = ServiceCapabilityFactory.createRequirement(ResourceSet.class);\nResourceSet resourceSet = capabilityLoader.loadOne(requirement, progressMonitor);\n\nFile moduleFile = new File(&quot;target/module.xlsx&quot;).getCanonicalFile();\nResource excelResource = resourceSet.createResource(URI.createFileURI(moduleFile.getAbsolutePath()));\nWorkbook workbook = ExcelFactory.eINSTANCE.createWorkbook();\nexcelResource.getContents().add(workbook);\n\nModule module = getClass().getModule();\nModuleDescriptor descriptor = module.getDescriptor();\n\nRowSheet rowSheet = workbook.addRowSheet(module.getName());\n\nCellRow headerRow = rowSheet.addCellRow();\nheaderRow.addStringCell(&quot;Name&quot;);\nheaderRow.addStringCell(&quot;Modifiers&quot;);\nheaderRow.addStringCell(&quot;Version&quot;);\n\nfor (Requires req: descriptor.requires()) {\n\tCellRow reqRow = rowSheet.addCellRow();\n\treqRow.addStringCell(req.name());\n\n\tStringBuilder modifiersBuilder = new StringBuilder();\n\treq.modifiers().forEach(m -&gt; {\n\t\tif (!modifiersBuilder.isEmpty()) {\n\t\t\tmodifiersBuilder.append(&quot;, &quot;);\n\t\t}\n\t\tmodifiersBuilder.append(m);\n\t});\n\treqRow.addStringCell(modifiersBuilder.toString());\n\n\tOptional&lt;Version&gt; versionOpt = req.compiledVersion();\n\tif (versionOpt.isEmpty()) {\n\t\treqRow.addBlankCell();\n\t} else {\n\t\tVersion version = versionOpt.get();\n\t\treqRow.addStringCell(version.toString());\n\t}\n}\nexcelResource.save(null);\n Series and column builders CapabilityLoader capabilityLoader = new CapabilityLoader();\nProgressMonitor progressMonitor = new PrintStreamProgressMonitor();\nRequirement&lt;ResourceSetRequirement, ResourceSet&gt; requirement = ServiceCapabilityFactory.createRequirement(ResourceSet.class);\nResourceSet resourceSet = capabilityLoader.loadOne(requirement, progressMonitor);\n\nFile moduleFile = new File(&quot;target/module-series.xlsx&quot;).getCanonicalFile();\nResource excelResource = resourceSet.createResource(URI.createFileURI(moduleFile.getAbsolutePath()));\nWorkbook workbook = ExcelFactory.eINSTANCE.createWorkbook();\nexcelResource.getContents().add(workbook);\n\nModule module = getClass().getModule();\nModuleDescriptor descriptor = module.getDescriptor();\n\nList&lt;ColumnBuilder&lt;Requires&gt;&gt; columnBuilders = new ArrayList&lt;&gt;();\n\ncolumnBuilders.add(TitleAndDescriptionColumnBuilder.stringColumnBuilder(\n\t\t&quot;Name&quot;,\n\t\t&quot;Requires name&quot;,\n\t\tRequires::name,\n\t\tnull));\n\ncolumnBuilders.add(TitleAndDescriptionColumnBuilder.stringColumnBuilder(\n\t\t&quot;Modifiers&quot;,\n\t\t&quot;Requires modifiers&quot;,\n\t\treq -&gt; {\n\t\t\tStringBuilder modifiersBuilder = new StringBuilder();\n\t\t\treq.modifiers().forEach(m -&gt; {\n\t\t\t\tif (!modifiersBuilder.isEmpty()) {\n\t\t\t\t\tmodifiersBuilder.append(&quot;, &quot;);\n\t\t\t\t}\n\t\t\t\tmodifiersBuilder.append(m);\n\t\t\t});\n\t\t\treturn modifiersBuilder.toString();\n\t\t},\n\t\tnull));\n\ncolumnBuilders.add(TitleAndDescriptionColumnBuilder.stringColumnBuilder(\n\t\t&quot;Version&quot;,\n\t\t&quot;Requires version&quot;,\n\t\treq -&gt; {\n\t\t\tOptional&lt;Version&gt; versionOpt = req.compiledVersion();\n\t\t\tif (versionOpt.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tVersion version = versionOpt.get();\n\t\t\treturn version.toString();\n\t\t},\n\t\tnull));\n\nSeries&lt;Requires&gt; series = Series.of(\n\t\t&quot;Requires&quot;,\n\t\tcolumnBuilders,\n\t\tdescriptor.requires(),\n\t\ttrue);\n\nseries.generate(workbook);\n\nexcelResource.save(null);\n Column builder group ColumnBuilderGroup&lt;Requires&gt; requiresGroup = new ColumnBuilderGroup&lt;ModuleDescriptor.Requires&gt;(\n\t\t&quot;Requires&quot;,\n\t\t&quot;Information about requires&quot;,\n\t\tcolumnBuilders);\n\nSeries&lt;Requires&gt; groupSeries = Series.of(\n\t\t&quot;Requires group&quot;,\n\t\tCollections.singletonList(requiresGroup),\n\t\tdescriptor.requires(),\n\t\ttrue);\n\ngroupSeries.generate(workbook);\n Reading a file CapabilityLoader capabilityLoader = new CapabilityLoader();\nProgressMonitor progressMonitor = new PrintStreamProgressMonitor();\nRequirement&lt;ResourceSetRequirement, ResourceSet&gt; requirement = ServiceCapabilityFactory.createRequirement(ResourceSet.class);\nResourceSet resourceSet = capabilityLoader.loadOne(requirement, progressMonitor);\n\nFile moduleFile = new File(&quot;target/module.xlsx&quot;).getCanonicalFile();\n\nResource excelResource = resourceSet.getResource(URI.createFileURI(moduleFile.getAbsolutePath()), true);\nfor (EObject root: excelResource.getContents()) {\n\tfor (Sheet sheet: ((Workbook) root).getSheets()) {\n\t\tSystem.out.println(sheet.getName() + &quot; &quot; + sheet.eClass().getName());\n\t\tfor (Row row: ((RowSheet) sheet).getRows()) {\n\t\t\tSystem.out.println(&quot;\t&quot; + row.getNumber() + &quot; &quot; + row.eClass().getName());\n\t\t\tfor (Cell cell: ((CellRow) row).getCells()) {\n\t\t\t\tSystem.out.println(&quot;\t\t&quot; + cell.getColumnIndex() + &quot; &quot; + cell.eClass().getName());\n\t\t\t\tif (cell instanceof StringCell) {\n\t\t\t\t\tSystem.out.println(&quot;\t\t\t&quot; + ((StringCell) cell).getValue());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"},"references/eClassifiers/ErrorCell/inheritance.html":{"path":"ErrorCell/Inheritance","link-uuid":"a45b17e0-72f9-4ad1-8b4c-572cb83efe5a","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/ListSheet/inheritance.html":{"path":"ListSheet/Inheritance","link-uuid":"7e194930-c05b-40b5-82b9-3bd2d7f08a1b","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/BooleanCell/inheritance.html":{"path":"BooleanCell/Inheritance","link-uuid":"138d6b80-cc2e-4e14-ad59-d8f84817b5b1","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/EObjectRow/inheritance.html":{"path":"EObjectRow/Inheritance","link-uuid":"06f2c58c-1ce5-4a89-b78b-51b88200f98f","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/Row/inheritance.html":{"path":"Row/Inheritance","link-uuid":"45b9896c-b4a8-41cc-9eb4-6c4cf92df730","title":"Inheritance","content":"Subtypes "},"references/eClassifiers/CellRow/inheritance.html":{"path":"CellRow/Inheritance","link-uuid":"c7cef09d-c1b3-46da-81e0-0f4e90bf1602","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/DateCell/inheritance.html":{"path":"DateCell/Inheritance","link-uuid":"446e8ce8-3563-44e0-b534-5be8d5aa89d6","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/ListRow/inheritance.html":{"path":"ListRow/Inheritance","link-uuid":"6a7f9e51-555f-4afa-9cb1-f2f762759f9d","title":"Inheritance","content":"Supertypes "}}