var searchDocuments = {"references/eClassifiers/Sheet/inheritance.html":{"path":"Sheet/Inheritance","link-uuid":"53390928-93a8-44b6-8ae0-adc69552e071","title":"Inheritance","content":"Subtypes "},"references/eClassifiers/Cell/inheritance.html":{"path":"Cell/Inheritance","link-uuid":"8652a3e6-912f-4258-a2d3-2fb5dfa54e91","title":"Inheritance","content":"Subtypes "},"references/eClassifiers/StringCell/inheritance.html":{"path":"StringCell/Inheritance","link-uuid":"7bd1d412-7362-4134-a113-3dec3c8cb4ce","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/RowSheet/inheritance.html":{"path":"RowSheet/Inheritance","link-uuid":"6c4ab10c-7fa4-4729-b59f-d7de2ce3a8db","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/Workbook/index.html":{"link-uuid":"cfb328bc-2b4a-41f5-8292-039c39ceb7c4","title":"Workbook","content":"Excel workbook containing sheets of possibly different type"},"references/eClassifiers/NumericCell/inheritance.html":{"path":"NumericCell/Inheritance","link-uuid":"34976334-a6f2-4088-9ee3-a03a3a4eaa0d","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/ReferenceCell/inheritance.html":{"path":"ReferenceCell/Inheritance","link-uuid":"e5ee2bd0-863d-4fbf-9a46-3e56c6060e16","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/EObjectCell/inheritance.html":{"path":"EObjectCell/Inheritance","link-uuid":"12bab4fa-940c-49a7-b464-febfe14df675","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/BlankCell/inheritance.html":{"path":"BlankCell/Inheritance","link-uuid":"90b989f4-ef65-4f40-8e71-43b72d5ee3df","title":"Inheritance","content":"Supertypes "},"index.html":{"link-uuid":"1b9a8f87-4313-4b4a-96c9-cf4fe29e3a19","title":"Excel","content":"Creating a model and writing a file Series and column builders Column builder group Reading a file Creating a model and writing a file CapabilityLoader capabilityLoader = new CapabilityLoader();\nProgressMonitor progressMonitor = new PrintStreamProgressMonitor();\nRequirement&lt;ResourceSetRequirement, ResourceSet&gt; requirement = ServiceCapabilityFactory.createRequirement(ResourceSet.class);\nResourceSet resourceSet = capabilityLoader.loadOne(requirement, progressMonitor);\n\nFile moduleFile = new File(&quot;target/module.xlsx&quot;).getCanonicalFile();\nResource excelResource = resourceSet.createResource(URI.createFileURI(moduleFile.getAbsolutePath()));\nWorkbook workbook = ExcelFactory.eINSTANCE.createWorkbook();\nexcelResource.getContents().add(workbook);\n\nModule module = getClass().getModule();\nModuleDescriptor descriptor = module.getDescriptor();\n\nRowSheet rowSheet = workbook.addRowSheet(module.getName());\n\nCellRow headerRow = rowSheet.addCellRow();\nheaderRow.addStringCell(&quot;Name&quot;);\nheaderRow.addStringCell(&quot;Modifiers&quot;);\nheaderRow.addStringCell(&quot;Version&quot;);\n\nfor (Requires req: descriptor.requires()) {\n\tCellRow reqRow = rowSheet.addCellRow();\n\treqRow.addStringCell(req.name());\n\n\tStringBuilder modifiersBuilder = new StringBuilder();\n\treq.modifiers().forEach(m -&gt; {\n\t\tif (!modifiersBuilder.isEmpty()) {\n\t\t\tmodifiersBuilder.append(&quot;, &quot;);\n\t\t}\n\t\tmodifiersBuilder.append(m);\n\t});\n\treqRow.addStringCell(modifiersBuilder.toString());\n\n\tOptional&lt;Version&gt; versionOpt = req.compiledVersion();\n\tif (versionOpt.isEmpty()) {\n\t\treqRow.addBlankCell();\n\t} else {\n\t\tVersion version = versionOpt.get();\n\t\treqRow.addStringCell(version.toString());\n\t}\n}\nexcelResource.save(null);\n Series and column builders CapabilityLoader capabilityLoader = new CapabilityLoader();\nProgressMonitor progressMonitor = new PrintStreamProgressMonitor();\nRequirement&lt;ResourceSetRequirement, ResourceSet&gt; requirement = ServiceCapabilityFactory.createRequirement(ResourceSet.class);\nResourceSet resourceSet = capabilityLoader.loadOne(requirement, progressMonitor);\n\nFile moduleFile = new File(&quot;target/module-series.xlsx&quot;).getCanonicalFile();\nResource excelResource = resourceSet.createResource(URI.createFileURI(moduleFile.getAbsolutePath()));\nWorkbook workbook = ExcelFactory.eINSTANCE.createWorkbook();\nexcelResource.getContents().add(workbook);\n\nModule module = getClass().getModule();\nModuleDescriptor descriptor = module.getDescriptor();\n\nList&lt;ColumnBuilder&lt;Requires&gt;&gt; columnBuilders = new ArrayList&lt;&gt;();\n\ncolumnBuilders.add(TitleAndDescriptionColumnBuilder.stringColumnBuilder(\n\t\t&quot;Name&quot;,\n\t\t&quot;Requires name&quot;,\n\t\tRequires::name,\n\t\tnull));\n\ncolumnBuilders.add(TitleAndDescriptionColumnBuilder.stringColumnBuilder(\n\t\t&quot;Modifiers&quot;,\n\t\t&quot;Requires modifiers&quot;,\n\t\treq -&gt; {\n\t\t\tStringBuilder modifiersBuilder = new StringBuilder();\n\t\t\treq.modifiers().forEach(m -&gt; {\n\t\t\t\tif (!modifiersBuilder.isEmpty()) {\n\t\t\t\t\tmodifiersBuilder.append(&quot;, &quot;);\n\t\t\t\t}\n\t\t\t\tmodifiersBuilder.append(m);\n\t\t\t});\n\t\t\treturn modifiersBuilder.toString();\n\t\t},\n\t\tnull));\n\ncolumnBuilders.add(TitleAndDescriptionColumnBuilder.stringColumnBuilder(\n\t\t&quot;Version&quot;,\n\t\t&quot;Requires version&quot;,\n\t\treq -&gt; {\n\t\t\tOptional&lt;Version&gt; versionOpt = req.compiledVersion();\n\t\t\tif (versionOpt.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tVersion version = versionOpt.get();\n\t\t\treturn version.toString();\n\t\t},\n\t\tnull));\n\nSeries&lt;Requires&gt; series = Series.of(\n\t\t&quot;Requires&quot;,\n\t\tcolumnBuilders,\n\t\tdescriptor.requires(),\n\t\ttrue);\n\nseries.generate(workbook);\n\nexcelResource.save(null);\n Column builder group ColumnBuilderGroup&lt;Requires&gt; requiresGroup = new ColumnBuilderGroup&lt;ModuleDescriptor.Requires&gt;(\n\t\t&quot;Requires&quot;,\n\t\t&quot;Information about requires&quot;,\n\t\tcolumnBuilders);\n\nSeries&lt;Requires&gt; groupSeries = Series.of(\n\t\t&quot;Requires group&quot;,\n\t\tCollections.singletonList(requiresGroup),\n\t\tdescriptor.requires(),\n\t\ttrue);\n\ngroupSeries.generate(workbook);\n Reading a file CapabilityLoader capabilityLoader = new CapabilityLoader();\nProgressMonitor progressMonitor = new PrintStreamProgressMonitor();\nRequirement&lt;ResourceSetRequirement, ResourceSet&gt; requirement = ServiceCapabilityFactory.createRequirement(ResourceSet.class);\nResourceSet resourceSet = capabilityLoader.loadOne(requirement, progressMonitor);\n\nFile moduleFile = new File(&quot;target/module.xlsx&quot;).getCanonicalFile();\n\nResource excelResource = resourceSet.getResource(URI.createFileURI(moduleFile.getAbsolutePath()), true);\nfor (EObject root: excelResource.getContents()) {\n\tfor (Sheet sheet: ((Workbook) root).getSheets()) {\n\t\tSystem.out.println(sheet.getName() + &quot; &quot; + sheet.eClass().getName());\n\t\tfor (Row row: ((RowSheet) sheet).getRows()) {\n\t\t\tSystem.out.println(&quot;\t&quot; + row.getNumber() + &quot; &quot; + row.eClass().getName());\n\t\t\tfor (Cell cell: ((CellRow) row).getCells()) {\n\t\t\t\tSystem.out.println(&quot;\t\t&quot; + cell.getColumnIndex() + &quot; &quot; + cell.eClass().getName());\n\t\t\t\tif (cell instanceof StringCell) {\n\t\t\t\t\tSystem.out.println(&quot;\t\t\t&quot; + ((StringCell) cell).getValue());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"},"references/eClassifiers/ErrorCell/inheritance.html":{"path":"ErrorCell/Inheritance","link-uuid":"002a2c3e-531e-43af-af8d-116dcbd1ed37","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/ListSheet/inheritance.html":{"path":"ListSheet/Inheritance","link-uuid":"6ac37cc5-1498-4d0e-b824-2fbf359eb5a0","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/BooleanCell/inheritance.html":{"path":"BooleanCell/Inheritance","link-uuid":"d5892613-7195-4fa6-a993-42bc0441f8cf","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/EObjectRow/inheritance.html":{"path":"EObjectRow/Inheritance","link-uuid":"e93e04ac-5a4d-4687-a1cc-bb5cca3882d5","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/Row/inheritance.html":{"path":"Row/Inheritance","link-uuid":"df458cea-9310-4781-b76a-347d4f7e8c3e","title":"Inheritance","content":"Subtypes "},"references/eClassifiers/CellRow/inheritance.html":{"path":"CellRow/Inheritance","link-uuid":"d002794e-a3b8-49f0-9dba-a2df8ad391c6","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/DateCell/inheritance.html":{"path":"DateCell/Inheritance","link-uuid":"4e705197-71f5-4718-b4f8-4659c98b8372","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/ListRow/inheritance.html":{"path":"ListRow/Inheritance","link-uuid":"f8fc342f-ef00-49d3-b3eb-05f1068a8cbf","title":"Inheritance","content":"Supertypes "}}